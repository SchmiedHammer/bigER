grammar org.big.erd.EntityRelationship with org.eclipse.xtext.common.Terminals

import "http://www.eclipse.org/emf/2002/Ecore" as ecore
generate entityRelationship "http://www.big.org/erd/EntityRelationship"

Model:
	'erdiagram' name=ID
	(generateOption=GenerateOption? & notation=NotationOption?)
	(entities+=Entity | relationships+=Relationship)*;

GenerateOption:
	'generate' '=' generateOptionType=GenerateOptionType;

NotationOption:
	'notation' '=' notationType=NotationType;

Entity:
	(weak?='weak')? 'entity' name=ID ('extends' extends=[Entity])? '{'
		(attributes += Attribute)*
	'}';

Relationship:
	(weak?='weak')? 'relationship' name=ID '{'
		(first=RelationEntity (('->' second=RelationEntity) ('->' third=RelationEntity)?)?)?
		(attributes += Attribute)*
	'}';

RelationEntity:
	target=[Entity] ('[' 
		(cardinality=CardinalityType | customMultiplicity=STRING | minMax=MinMax | uml=Uml)
	']')?(role=STRING)?;

Attribute:
	name=ID (':' datatype=DataType)? (type=AttributeType)?;

DataType:
	type=ID ('(' size=INT ')')?;  

@Override	
terminal INT returns ecore::EInt:
    ('0'..'9')+;
    
terminal MinMax:
	 ('0'..'9')+','(('0'..'9')+|'*');
	 
terminal Uml:
	 (('comp ')?|('agg ')?)('0'..'9')+(('..'('0'..'9')+)?|('..''*')?);

enum AttributeType:
	NONE = 'none' | 
	KEY = 'key' | 
	PARTIAL_KEY = 'partial-key' | 
	OPTIONAL = 'optional' |  
	DERIVED = 'derived' | 
	MULTIVALUED = 'multivalued';

enum CardinalityType:
	ONE = '1' | MANY = 'N' | MANY_CHEN = 'M' | ZERO = '0' | ONE_OR_MORE = '1+' | ZERO_OR_MORE = '0+' | ZERO_OR_ONE = '?';

enum GenerateOptionType:
	OFF = 'off' | 
	SQL = 'sql';

enum NotationType:
    DEFAULT='default' | CHEN='chen' | MINMAX='minmax' | BACHMAN='bachman' | CROWSFOOT='crowsfoot'| UML='uml';   